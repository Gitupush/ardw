apiVersion: v1
data:
  jcp.traceconf: >-
    ## This file is used by JCPJTracerAppender and logstash-jtracer container

    ## and the syntax must therefore comply to both parsing libraries used


    # Default QUEUE_SIZE=1000
    https://rndwww.nce.amadeus.net/confluence/display/LOG/JTracer+Configuration+Syntax

    GLOBAL QUEUE_SIZE 65536


    ## Filters section

    FILTER ALL = *:*

    # Log server section

    LOGSERVER_SERVICE NAME=logserver-alf-uat-new.ardw-infra PORT=8856 FILTER=ALL
  logstash.conf: "# acs-ard log files Test\r\n\r\ninput {\r\n\r\n# Add server.log file\r\n\tfile {\r\n\t\ttype => \"appserver\"\r\n\t\tpath => [ \"/logs/${ACS_COMPONENT}/ard-main/server.log*\" ]\r\n\t\tsincedb_path  => \"/logs/${ACS_COMPONENT}/.logstash_sincedb_ard-main_serverlog\"\r\n\t\tstart_position => \"beginning\"\r\n                codec => multiline {\r\n                pattern => \"     id='| at |Caused by:|\\t...|]\\):\"\r\n                what => \"previous\"\r\n                }\r\n\t}\r\n\r\n # Add gc.log files\r\n\tfile {\r\n\t\ttype => \"appserver-gc\"\r\n\t\tpath => [ \"/logs/${ACS_COMPONENT}/ard-main/gc.log*\" ]\r\n\t\tsincedb_path  => \"/logs/${ACS_COMPONENT}.logstash_sincedb_ard-main_gc\"\r\n\t\tstart_position => \"beginning\"\r\n\t}\r\n\r\n# Add apache errors.log file\r\n\tfile {\r\n\t\ttype => \"apache-error\"\r\n\t\tpath => [ \"/logs/${ACS_COMPONENT}/acs-ard-webserver/error.log*\" ]\r\n\t\tsincedb_path  => \"/logs/${ACS_COMPONENT}/.logstash_sincedb_acs-ard-webserver_errorlog\"\r\n\t\tstart_position => \"beginning\"\r\n\t}\r\n\r\n\t# Add apache access.log file\r\n\tfile {\r\n\t\ttype => \"apache-access\"\r\n\t\tpath => [ \"/logs/${ACS_COMPONENT}/acs-ard-webserver/access.log*\" ]\r\n\t\tsincedb_path  => \"/logs/${ACS_COMPONENT}/.logstash_sincedb_acs-ard-webserver_accesslog\"\r\n\t\tstart_position => \"beginning\"\r\n\t}\r\n\r\n  # Add Jboss access.log file\r\n\tfile {\r\n\t\ttype => \"jboss-access\"\r\n\t\tpath => [ \"/logs/${ACS_COMPONENT}/ard-main/access.log*\" ]\r\n\t\tsincedb_path  => \"/logs/${ACS_COMPONENT}/.logstash_sincedb_ard-main_accesslog\"\r\n\t\tstart_position => \"beginning\"\r\n\t}\r\n\r\n    # Add Refresh-cache file\r\n   file {\r\n      path => [ \"/logs/${ACS_COMPONENT}/ard-main/refresh-cache.log*\" ]\r\n      start_position => \"beginning\"\r\n      sincedb_path => \"/logs/${ACS_COMPONENT}/.logstash_sincedb_ard-main_refresh-cache\"\r\n      type => \"refresh-cache\"\r\n  }\r\n\r\n# Add hosttrace file\r\n  file {\r\n    path => [ \"/logs/acs-ard/ard-main/logs/hosttrace/*\" ]\r\n    start_position => \"beginning\"\r\n\tdelimiter => \"</Trace>\"\r\n    sincedb_path => \"/logs/${ACS_COMPONENT}/.logstash_sincedb_ard-main_hosttrace\"\r\n\ttype => \"hostrace\"\r\n\tclose_older => \"5\"  \r\n  }\r\n# Add Statistics files available\r\n  file {\r\n      path => [ \"/logs/acs-ard/ard-main/logs/statistic/*\" ]\r\n      start_position => \"beginning\"\r\n      sincedb_path => \"/logs/${ACS_COMPONENT}/.logstash_sincedb_ard-main_stat_logs\"\r\n      type => \"stat-logs\"\r\n  }\r\n# Add all log files available\r\n  file {\r\n      path => [ \"/logs/acs-ard/ard-main/logs/app/*\" ]\r\n      start_position => \"beginning\"\r\n      sincedb_path => \"/logs/${ACS_COMPONENT}/.logstash_sincedb_ard-main_app_logs\"\r\n      type => \"app-logs\"\r\n  }\t\r\n}\r\n\r\nfilter {\r\n   grok {\r\n      # retrieve log file name\r\n      match => [\"path\",\"%{GREEDYDATA}/%{GREEDYDATA:filename}\\.*\"]\r\n      # retrieve docker image name out of path\r\n      match => [\"path\",\"/%{GREEDYDATA}/%{GREEDYDATA}/%{GREEDYDATA:docker_image}/%{GREEDYDATA}\"]\r\n      break_on_match => false\r\n  }\r\n}\r\n\r\n# If the Openshift service \"logserver\" is available LOGSERVER_HOST and LOGSERVER_PORT will be using the OS var coming from the service\r\n# otherwise a hard coded value 0.0.0.0:8856 will be used\r\n# here the logic https://rndwww.nce.amadeus.net/git/projects/UHA/repos/images_mnr/browse/docker/logstash-jtracer/init.sh?at=refs%2Ftags%2F2.0.0#45-46\r\n# below we are using a fix server host/port which allows us to deploy the application component before the service removing a dependency\r\n# we know beforehand that we either use the logserver service from tinylogserver or the one from https://rndwww.nce.amadeus.net/git/projects/AEKACS/repos/acs-external-services/browse\r\n\r\n# The hostrace input has been trunck of <Trace> , wee need to add it again to have an valid xml\r\n\r\noutput {\r\n    if [type] == \"apache-access\" {\r\n    jtracer {\r\n      codec => plain {format => \"${NAMESPACE} ${HOSTNAME} ${ACS_COMPONENT} ${ACS_COMPONENT_VERSION} %{docker_image} %{filename} %{message}\"}\r\n      tracer_conf_file => \"${JCP_JTRACER_CONF_PATH}\"\r\n      filename => \"${NAMESPACE}-${ACS_COMPONENT}-JSID-apache-access-log\"\r\n    }\r\n  }\r\n  else if [type] == \"jboss-access\" {\r\n    jtracer {\r\n      codec => plain {format => \"${NAMESPACE} ${HOSTNAME} ${ACS_COMPONENT} ${ACS_COMPONENT_VERSION} %{docker_image} %{filename} %{message}\"}\r\n      tracer_conf_file => \"${JCP_JTRACER_CONF_PATH}\"\r\n      filename => \"${NAMESPACE}-${ACS_COMPONENT}-JSID-jboss-access-log\"\r\n    }\r\n    }\r\n\r\n\telse if [type] == \"hostrace\" {\r\n\t\tjtracer {\r\n\r\n\t\t\tcodec => plain {format => \"${NAMESPACE} ${HOSTNAME} acs-ard ${ACS_COMPONENT_VERSION} %{docker_image} %{filename} %{message}</Trace>\"}\r\n\t\t\ttracer_conf_file => \"${JCP_JTRACER_CONF_PATH}\"\r\n      filename => \"${NAMESPACE}-${ACS_COMPONENT}-JSID-ard-main-hostrace-log\"\r\n    }\r\n    }\r\n\t\r\n  else if [type] == \"apache-error\" {\r\n    jtracer {\r\n\r\n      codec => plain {format => \"${NAMESPACE} ${HOSTNAME} ${ACS_COMPONENT} ${ACS_COMPONENT_VERSION} %{docker_image} %{filename} %{message}\"}\r\n      tracer_conf_file => \"${JCP_JTRACER_CONF_PATH}\"\r\n      filename => \"${NAMESPACE}-${ACS_COMPONENT}-TECH-apache-error-log\"\r\n    }\r\n    }\r\n  \r\n  else if [type] == \"appserver\" {\r\n    jtracer {\r\n   \r\n      codec => plain {format => \"${NAMESPACE} ${HOSTNAME} ${ACS_COMPONENT} ${ACS_COMPONENT_VERSION} %{docker_image} %{filename} %{message}\"}\r\n      tracer_conf_file => \"${JCP_JTRACER_CONF_PATH}\"\r\n      filename => \"${NAMESPACE}-${ACS_COMPONENT}-JSID-jboss-server-log\"\r\n    }\r\n    }\r\n  \r\n  else if [type] == \"appserver-gc\" {\r\n    jtracer {\r\n  \r\n      codec => plain {format => \"${NAMESPACE} ${HOSTNAME} ${ACS_COMPONENT} ${ACS_COMPONENT_VERSION} %{docker_image} %{filename} %{message}\"}\r\n      tracer_conf_file => \"${JCP_JTRACER_CONF_PATH}\"\r\n      filename => \"${NAMESPACE}-${ACS_COMPONENT}-TECH-jboss-server-gc-log-${HOSTNAME}\"\r\n    }\r\n    }\r\n  \r\n  else  if [type] == \"refresh-cache\" {\r\n    jtracer {\r\n   \r\n      codec => plain {format => \"${NAMESPACE} ${HOSTNAME} ${ACS_COMPONENT} ${ACS_COMPONENT_VERSION} %{docker_image} %{filename} %{message}\"}\r\n      tracer_conf_file => \"${JCP_JTRACER_CONF_PATH}\"\r\n      filename => \"${NAMESPACE}-${ACS_COMPONENT}-TECH-refresh-cache\"\r\n    }\r\n    }\r\n\t\r\n\telse  if [type] == \"app-logs\" {\r\n    jtracer {\r\n\t\r\n      codec => plain {format => \"${NAMESPACE} ${HOSTNAME} ${ACS_COMPONENT} ${ACS_COMPONENT_VERSION} %{docker_image} %{filename} %{message}\"}\r\n      tracer_conf_file => \"${JCP_JTRACER_CONF_PATH}\"\r\n      filename => \"${NAMESPACE}-${ACS_COMPONENT}-TECH-app-log-%{filename}\"\r\n    }\r\n    }\t\r\n    \r\n\telse  if [type] == \"stat-logs\" {\r\n    jtracer {\r\n \r\n      codec => plain {format => \"${NAMESPACE} ${HOSTNAME} ${ACS_COMPONENT} ${ACS_COMPONENT_VERSION} %{docker_image} %{filename} %{message}\"}\r\n      tracer_conf_file => \"${JCP_JTRACER_CONF_PATH}\"\r\n      filename => \"${NAMESPACE}-${ACS_COMPONENT}-TECH-stat-log-%{filename}\"\r\n    }\r\n    }\r\n  \r\n\telse {\r\n\t\tjtracer {\r\n    \r\n\t\t\tcodec => plain {format => \"${NAMESPACE} ${HOSTNAME} acs-ard ${ACS_COMPONENT_VERSION} %{docker_image} %{filename} %{message}\"}\r\n\t\t\ttracer_conf_file => \"${JCP_JTRACER_CONF_PATH}\"\r\n      filename => \"${NAMESPACE}-${ACS_COMPONENT}-TECH-other\"\r\n    }\r\n    }\r\n\t\r\n}\r\n"
kind: ConfigMap
metadata:
  labels:
    acs-component: acs-ard
  name: logconfig-v1
  namespace: ardw-hema
